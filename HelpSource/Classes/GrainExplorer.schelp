TITLE:: GrainExplorer
summary:: A GUI to explore and render one-shot sounds
categories:: Convenience
related:: Classes/SynthDef

2019 Till Bovermann
http://tai-studio.org

DESCRIPTION::
A GUI to explore self-freeing link::Classes/SynthDef::s. It is possible to render the current setting to disk in various formats, e,g, to use the sounds in (hardware) drum samplers.

note::
The code::Synthdef:: needs to have the following features for this to work properly:

list::
## free itself after a time set with a synth parameter called either code::sustain:: or code::duration::
## output channels need to be set to start with code::0:: and be the same as code::numChans::
::
::

subsection:: keyboard and mouse shortcuts

list::
## code::<option>-<return>:: trigger sound (if in code-view, evaluate synthdef)
## double-click on slider names toggles between slider and link::Classes/ControlSpec:: view.
## code::win:: redraw GUI window (to add/remove unused/new sliders)
## code::trig:: trigger sound
## code::save:: render sound to disk and write description file
::

note::
This class was tested on osx only but should work on other platforms, too.
::


Simple example:

code::
(
GrainExplorer(
	SynthDef(\bd, {|out = 0, freq = 67, sustain = 0.5, attack = 0.01, amp=0.1, startFreq = 1000|

		var osc = SinOsc.ar(XLine.kr(startFreq, freq, attack), 0.5pi);
		var env = EnvGen.kr(Env.perc(attack, sustain), doneAction: 2) * amp;

		Out.ar(out, osc * env!2);


	}).metadata_(( // parsed for slider ranges
		'specs': (
			out: [0,1,\lin, 1].asSpec,
			attack: [0,1,\lin, 0, 0.01].asSpec,
			sustain: [0,1,\lin, 0, 1].asSpec,
			startFreq: [100,1000,\exp, 0, 100].asSpec,
			freq:[10,100,\exp, 0, 67].asSpec,
			amp: [0,1,\lin, 0, 1].asSpec
	))),
	numChans: 2,
	path: "~/Desktop".standardizePath,
	author: "say my name"
).edit
)
::

CLASSMETHODS::

METHOD:: new
returns a new instance.


argument:: synthDef
the synthdef to edit, should include specs in its metadata

argument:: numChans
the number of channels

argument:: path
where to render the sounds to

argument:: author
your name



INSTANCEMETHODS::

PRIVATE:: pr_assembleSynthDefString, pr_writeDefFile, pr_syncMetaData, makeWindow, sliders, window, filePath, renderSound, getSliderValues, dirPath, init

METHOD:: edit
argument:: elHeight
height of control elements

METHOD:: renderAndWrite
render sound and write code::.scd:: file.

METHOD:: play
METHOD:: numChans
how many channels to render. must be reflected in the code::SynthDef:: as well

METHOD:: path
the path to render the sounds to.

METHOD:: synthDef
the synthdef

METHOD:: author
the author

METHOD:: font
font used for the interface

